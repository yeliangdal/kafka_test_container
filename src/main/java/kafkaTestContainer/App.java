/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package kafkaTestContainer;

import java.util.*;
import java.util.stream.IntStream;

public class App {

    public static void main(String[] args) {

//        IntStream.range(0, 5)
//                .forEach(System.out::println);

        List<Integer> ints = new ArrayList<>(List.of(3, 45, 23, 4, 4, 12));
//        ints.sort((a, b) -> b-a);
//        ints.forEach(System.out::println);
//        ints.stream().sorted((a,b) -> a-b)
//                .forEach(System.out::println);

//        Set<Integer> intSets = new HashSet<>(ints);
//        intSets.forEach(System.out::println);
//
//        List<String> strings = Arrays.asList("one", "two", "three");
//        List<String> strings2 = new ArrayList<>(List.copyOf(strings));
//        strings2.add("four");
//        strings2.forEach(System.out::println);

//        Map.Entry<Integer, String> e1 = Map.entry(1, "one");
//        Map.Entry<Integer, String> e2 = Map.entry(2, "two");
//        Map.Entry<Integer, String> e3 = Map.entry(3, "three");
//
//        Map<Integer, String> map = new HashMap<>(Map.ofEntries(e1, e2, e3));
//        Set<Integer> keys = map.keySet();
//        System.out.println(map.putIfAbsent(4, "four"));

//        Map<String, Integer> map = new HashMap<>();
//
//        map.put("one", 1);
//        map.put("two", null);
//        map.put("three", 3);
//        map.put("four", null);
//        map.put("five", 5);
//
//        for (int value : map.values()) {
//            System.out.println("value = " + value);
//        }

        List<String> strings = List.of("one", "two", "three", "four", "five", "six", "seven");
        Map<Integer, List<String>> map = new HashMap<>();
//        for (String word: strings) {
//            int length = word.length();
//            map.putIfAbsent(length, new ArrayList<>());
//            map.get(length).add(word);
//        }
        strings.forEach(word -> {
            int length = word.length();
//            map.putIfAbsent(length, new ArrayList<>());
//            map.get(length).add(word);
            map.computeIfAbsent(length, k -> new ArrayList<>()).add(word);
        });

        map.forEach((key, value) -> System.out.println(key + " :: " + value));
    }
}
